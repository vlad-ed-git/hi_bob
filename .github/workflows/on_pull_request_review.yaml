name: On Pull Request Review
on:
  pull_request:
    types: [ready_for_review]
    branches:
      - development

jobs:
  build_apks:
    name: Build Android APKs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "17.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Get version number
        id: get_version
        run: |
          echo "version=$(grep -oP 'version: \K.*' pubspec.yaml)" >> $GITHUB_OUTPUT

      - name: Build Development APK
        run: flutter build apk --release --target-platform android-arm,android-arm64 -t ./lib/main_development.dart --flavor=development

      - name: Create Dev release
        id: create_dev_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: dev${{ steps.get_version.outputs.version }}
          release_name: Development APK ${{ steps.get_version.outputs.version }}
          body: |
            This is an automatically generated release for APK build.
          draft: false
          prerelease: true

      - name: Upload Dev APK
        id: upload_dev_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_dev_release.outputs.upload_url }}
          asset_path: build/app/outputs/flutter-apk/app-development-release.apk
          asset_name: app-development-release.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Build Production APK
        run: flutter build apk --release --target-platform android-arm,android-arm64 -t ./lib/main_production.dart --flavor=production

      - name: Create Production release
        id: create_prod_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Production APK ${{ steps.get_version.outputs.version }}
          body: |
            This is an automatically generated release for APK build.
          draft: false
          prerelease: true

      - name: Upload Production APK
        id: upload_prod_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_prod_release.outputs.upload_url }}
          asset_path: build/app/outputs/flutter-apk/app-production-release.apk
          asset_name: app-production-release.apk
          asset_content_type: application/vnd.android.package-archive
